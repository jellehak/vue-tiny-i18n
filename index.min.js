const defaultOptions={locale:"en",fallbackLocale:"en",countTag:`{count}`,countSeperator:"|",messages:{},fallbackTranslation:"__NO_TRANSLATION__",onMissingKey(key,{messages:messages,locale:locale,fallbackLocale:fallbackLocale}){console.log(`Missing key for language "${locale}": ${key}`);return messages[fallbackLocale][key]},getKey(key,{messages:messages={},locale:locale}){const translation=messages[locale][key];return translation}};export default{install(Vue,_options=defaultOptions,vueProp="$i18n"){const options={...defaultOptions,languages:Object.keys(_options.messages),..._options};Vue.prototype[vueProp]=Vue.observable(options);const{getKey:getKey}=options;Vue.mixin({computed:{$t(){return function(key){return getKey(key,options)||options.onMissingKey(key,options)||options.fallbackTranslation}},$tc(){return function(key,mixed={count:1}){const translation=getKey(key,options)||options.onMissingKey(key,options)||options.fallbackTranslation;const count=mixed.count?mixed.count:mixed;const{countTag:countTag,countSeperator:countSeperator}=options;const parts=translation.split(countSeperator);const part=parts[count>1?1:0]||options.fallbackTranslation;return part.replace(countTag,count)}}}})}};
